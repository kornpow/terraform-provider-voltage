{
  "openapi": "3.1",
  "info": {
    "title": "Voltage API",
    "version": "1.0.0",
    "description": "This is the API Spec for the Voltage Public API. This is open for anyone to use and  requires API Keys for Authentication.",
    "termsOfService": "https://voltage.cloud/terms",
    "contact": {
      "name": "Voltage Support",
      "url": "https://voltage.cloud",
      "email": "support@voltage.cloud"
    },
    "x-logo": {
      "url": "https://voltage.cloud/wp-content/uploads/2022/01/voltage-logo.png"
    },
    "license": null
  },
  "servers": [
    {
      "url": "https://api.voltage.cloud",
      "description": ""
    }
  ],
  "paths": {
    "/user": {
      "summary": "Used to retrieve user information",
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User Document"
                },
                "example": {
                  "user_id": "9e94432b-963b-41da-96a6-8731a80c811eU",
                  "email": "email@site.com",
                  "email_verified": true,
                  "mfa_enabled": false,
                  "trial_available": false,
                  "btcpayserver_trial": false,
                  "available_btcpayservers": 0,
                  "available_standard_nodes": 1,
                  "available_lite_nodes": 0,
                  "purchased_standard_nodes": 1,
                  "purchased_lite_nodes": 2
                }
              }
            }
          }
        },
        "summary": "/user",
        "description": "Get details about the user"
      }
    },
    "/node": {
      "get": {
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nodes": {
                      "type": "array",
                      "description": "List of nodes for the user",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of node, either 'standard' or 'lite'"
                          },
                          "node_name": {
                            "type": "string",
                            "description": "User defined node name given at creation"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the node. Can be one of 'starting', 'running', 'stopping', 'stopped', 'provisioning', 'waiting_init', 'waiting_unlock'."
                          },
                          "node_id": {
                            "type": "string",
                            "description": "Unique ID for the node."
                          },
                          "expires": {
                            "type": "string",
                            "description": "Date that the node expires. If a paid node with active subscription this is 'never'."
                          },
                          "created": {
                            "type": "string",
                            "description": "Date that the node was created."
                          },
                          "purchased_type": {
                            "type": "string",
                            "description": "Purchase type of the node. Can be either 'trial', 'paid', or 'ondemand'."
                          },
                          "purchase_status": {
                            "type": "string",
                            "description": "Purchase status of the node."
                          },
                          "api_endpoint": {
                            "type": "string",
                            "description": "API Endpoint for the node."
                          },
                          "network": {
                            "type": "string",
                            "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
                          },
                          "lnd_version": {
                            "type": "string",
                            "description": "Version of LND the node is running"
                          },
                          "volt_version": {
                            "type": "string",
                            "description": "Version of Voltage the node is running"
                          },
                          "update_available": {
                            "type": "boolean",
                            "description": "Indicates if there is an update available"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "nodes": [
                      {
                        "node_name": "myvoltagenode",
                        "status": "running",
                        "node_id": "555c5108-7438-488d-b227-5f80baf8a23aN",
                        "expires": "never",
                        "created": "2020-12-08T00:49:55Z",
                        "type": "standard",
                        "purchased_type": "paid",
                        "purchase_status": "active",
                        "api_endpoint": "myvoltagenode.m.voltageapp.io",
                        "network": "mainnet",
                        "lnd_version": "0.13.1-beta",
                        "volt_version": "v0.3.0",
                        "update_available": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "summary": "/node",
        "description": "List all nodes for the user"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "555c5108-7438-488d-b227-5f80baf8a23aN"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Node Document"
                },
                "example": {
                  "node_name": "myvoltagenode",
                  "status": "running",
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "expires": "never",
                  "created": "2021-01-29T18:55:12Z",
                  "type": "standard",
                  "purchased_type": "paid",
                  "purchase_status": "active",
                  "lnd_version": "0.15.2-beta",
                  "volt_version": "v0.3.12",
                  "update_available": false,
                  "api_endpoint": "myvoltagenode.m.voltageapp.io",
                  "network": "mainnet",
                  "command_history": [
                    {
                      "action": "stop",
                      "time": "2021-08-29T18:55:12Z"
                    },
                    {
                      "action": "start",
                      "time": "2021-08-29T18:59:12Z"
                    }
                  ],
                  "settings": {
                    "autopilot": false,
                    "grpc": true,
                    "rest": true,
                    "keysend": true,
                    "alias": "myvoltagenode",
                    "color": "#EF820D",
                    "whitelist": [
                      "1.1.1.1",
                      "2.2.2.2"
                    ],
                    "wumbo": false,
                    "webhook": "",
                    "webhook_secret": "19cef4784ff04ff5bc8053d5847254e0",
                    "sphinx": true,
                    "minchansize": "",
                    "maxchansize": "",
                    "autocompaction": true,
                    "defaultfeerate": "",
                    "numgraphsyncpeers": "3",
                    "maxpendingchannels": "2",
                    "allowcircularroute": false,
                    "gccanceledinvoicesonthefly": false,
                    "gccanceledinvoicesonstartup": false,
                    "amp": true,
                    "wtclient": false,
                    "torskipproxyforclearnettargets": false,
                    "rpcmiddleware": false,
                    "optionscidalias": false,
                    "zeroconf": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                },
                "example": {
                  "message": "node_id is invalid"
                }
              }
            }
          }
        },
        "summary": "/node",
        "description": "Get information about a specific node"
      }
    },
    "/node/create": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "network",
                  "purchased_type",
                  "type",
                  "name",
                  "settings"
                ],
                "type": "object",
                "properties": {
                  "network": {
                    "type": "string",
                    "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
                  },
                  "purchased_type": {
                    "type": "string",
                    "description": "Purchase type of the node. Can be either 'trial', 'paid', or 'ondemand'."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of node, either 'standard' or 'lite'"
                  },
                  "name": {
                    "type": "string",
                    "description": "User defined node name given at creation"
                  },
                  "settings": {
                    "$ref": "#/components/schemas/Node Settings",
                    "required": [
                      "autopilot",
                      "alias",
                      "color",
                      "grpc",
                      "rest",
                      "tor",
                      "keysend",
                      "whitelist"
                    ]
                  }
                },
                "example": {
                  "network": "mainnet",
                  "purchased_type": "paid",
                  "type": "standard",
                  "name": "myvoltagenode",
                  "settings": {
                    "alias": "myvoltagenode",
                    "autocompaction": false,
                    "autopilot": false,
                    "color": "#EF820D",
                    "defaultfeerate": "",
                    "grpc": true,
                    "keysend": true,
                    "maxchansize": "",
                    "minchansize": "",
                    "rest": true,
                    "webhook": "",
                    "whitelist": [
                      "1.1.1.1",
                      "2.2.2.2"
                    ],
                    "wumbo": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "The Unique ID of the user creating the node"
                    },
                    "network": {
                      "type": "string",
                      "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
                    },
                    "created": {
                      "type": "string",
                      "description": "Date that the node was created."
                    },
                    "purchased_type": {
                      "type": "string",
                      "description": "Purchase type of the node. Can be either 'trial', 'paid', or 'ondemand'."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of node, either 'standard' or 'lite'"
                    },
                    "user_ip": {
                      "type": "string",
                      "description": "The detected IP address of the user creating the node. Useful for whitelisting."
                    }
                  },
                  "example": {
                    "node_id": "8ac52ac6-b205-4051-8ac6-c538c2f269a0N",
                    "owner_id": "2936b2c7-8980-442c-b037-4845ee6e84f1U",
                    "network": "mainnet",
                    "created": "2021-02-10T19:21:57Z",
                    "purchased_type": "ondemand",
                    "type": "standard",
                    "user_ip": "42.24.42.24"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "VALIDATION ERROR: ..."
                  }
                }
              }
            }
          }
        },
        "summary": "/node/create",
        "description": "Create an new Lightning Node"
      }
    },
    "/node/stop": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "3ac8b9f5-6e7a-4727-abe4-5ae61587e8e5N"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_name": {
                      "type": "string",
                      "description": "User defined node name given at creation"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the node. Can be one of 'starting', 'running', 'stopping', 'stopped', 'provisioning', 'waiting_init', 'waiting_unlock'."
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID for the node."
                    },
                    "expires": {
                      "type": "string",
                      "description": "Date that the node expires. If a paid node with active subscription this is 'never'."
                    },
                    "created": {
                      "type": "string",
                      "description": "Date that the node was created."
                    },
                    "api_endpoint": {
                      "type": "string",
                      "description": "API Endpoint for the node."
                    },
                    "network": {
                      "type": "string",
                      "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of node, either 'standard' or 'lite'"
                    }
                  },
                  "example": {
                    "node_name": "myvoltagenode",
                    "status": "stopping",
                    "node_id": "3ac8b9f5-6e7a-4727-abe4-5ae61587e8e5N",
                    "expires": "never",
                    "created": "2021-02-09T21:02:29Z",
                    "api_endpoint": "myvoltagenode.m.voltageapp.io",
                    "network": "mainnet",
                    "type": "standard"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                },
                "example": {
                  "message": "node_id is invalid"
                }
              }
            }
          }
        },
        "summary": "/node/stop",
        "description": "Stop a Node"
      }
    },
    "/node/start": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_name": {
                      "type": "string",
                      "description": "User defined node name given at creation"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the node. Can be one of 'starting', 'running', 'stopping', 'stopped', 'provisioning', 'waiting_init', 'waiting_unlock'."
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID for the node."
                    },
                    "expires": {
                      "type": "string",
                      "description": "Date that the node expires. If a paid node with active subscription this is 'never'."
                    },
                    "created": {
                      "type": "string",
                      "description": "Date that the node was created."
                    },
                    "api_endpoint": {
                      "type": "string",
                      "description": "API Endpoint for the node."
                    },
                    "network": {
                      "type": "string",
                      "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of node, either 'standard' or 'lite'"
                    }
                  },
                  "example": {
                    "node_name": "myvoltagenode",
                    "status": "starting",
                    "node_id": "3ac8b9f5-6e7a-4727-abe4-5ae61587e8e5N",
                    "expires": "never",
                    "created": "2021-02-09T21:02:29Z",
                    "api_endpoint": "myvoltagenode.m.voltageapp.io",
                    "network": "mainnet",
                    "type": "standard"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "node subscription is not active"
                  }
                }
              }
            }
          }
        },
        "summary": "/node/start",
        "description": "Start a node"
      }
    },
    "/node/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_name": {
                      "type": "string",
                      "description": "User defined node name given at creation"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the node. Can be one of 'starting', 'running', 'stopping', 'stopped', 'provisioning', 'waiting_init', 'waiting_unlock'."
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID for the node."
                    },
                    "expires": {
                      "type": "string",
                      "description": "Date that the node expires. If a paid node with active subscription this is 'never'."
                    },
                    "created": {
                      "type": "string",
                      "description": "Date that the node was created."
                    },
                    "api_endpoint": {
                      "type": "string",
                      "description": "API Endpoint for the node."
                    },
                    "network": {
                      "type": "string",
                      "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of node, either 'standard' or 'lite'"
                    }
                  },
                  "example": {
                    "node_name": "myvoltagenode",
                    "status": "deleted",
                    "node_id": "3ac8b9f5-6e7a-4727-abe4-5ae61587e8e5N",
                    "expires": "never",
                    "created": "2021-02-09T21:02:29Z",
                    "api_endpoint": "myvoltagenode.m.voltageapp.io",
                    "network": "mainnet",
                    "type": "standard"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "node_id is not valid"
                  }
                }
              }
            }
          }
        },
        "summary": "/node/delete",
        "description": "Delete a node"
      }
    },
    "/node/macaroon": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_id",
                  "name",
                  "macaroon"
                ],
                "type": "object",
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID of the node"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the macaroon you are backing up"
                  },
                  "macaroon": {
                    "type": "string",
                    "description": "Encrypted string of the macaroon. DO NOT UPLOAD UNENCRYPTED DATA."
                  }
                },
                "example": {
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "name": "admin",
                  "macaroon": "sdfkla3e2wenlkje3421="
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the macaroon"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date the macaroon was uploaded"
                    }
                  },
                  "example": {
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "name": "admin",
                    "created": "2021-08-29T18:55:12Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                },
                "example": {
                  "message": "macaroon name 'admin' already exists"
                }
              }
            }
          }
        },
        "summary": "/node/macaroon",
        "description": "Upload encrypted macaroon content"
      }
    },
    "/node/cert": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "tls_cert": {
                      "type": "string",
                      "description": "Base64 encoded TLS Certificate"
                    }
                  },
                  "example": {
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "tls_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdnRENDQkdpZ0F3SUJBZ0lRSE5wVmxDS3RmMGZoU1Y5UGtjOEJhVEFOQmdrcWhraUc5dzBCQVF3RkFEQkwKTVFzd0NRWURWUVFHRXdKQlZERVFNQTRHQTFVRUNoTUhXbVZ5YjFOVFRERXFNQ2dHQTFVRUF4TWhXbVZ5YjFOVApUQ0JTVTBFZ1JHOXRZV2x1SUZObFkzVnlaU0JUYVhSbElFTkJNQjRYRFRJeE1ERXlPVEF3TURBd01Gb1hEVEl4Ck1EUXlPVEl6TlRrMU9Wb3dKREVpTUNBR0ExVUVBeE1aWWk1MExuTjBZV2RwYm1jdWRtOXNkR0ZuWldGd2NDNXAKYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHZ0bEJWYkpCRmN3eVFEb1ZYdgpLZmJMaHlrTDFBYm80MWRHTmtaaHN2bHk5T3FlaUtOdmY1U05PTko4R2JZUTZPUG5qT0VqQjJ3N1Qwb3l6MUtVCjZKd3RJeVA2WTdpbG9vblhRbzUzd21CZDk3RTRKa2xZOVBPcndnWlpBeTJNdmFqT1h2TDRmWXZNODJNaHQrdHMKZXhlV2FJVFI3NCtJM1I5WWRMbldlMlAzN3c2S1RSUWNMemMzaEpnaHU3MFF3eWhhSE1mMlBlcUdwUmsxQlc4aApKYTd1dGRELzhKV0FWbWhBTFhzL0Q2bzgzaXpXQ0xwWU1wcUtWeEdnbndaV2dEQ2s4aWVOOUFHUFJmSVRKblhPCkZjaUF4LzV0ckxBSjdyMnl5Y2JKemN3V0xqTmlCeWJDSnRLanlHZVp1TUlPTWY0Sm4xSTkxVTJPOG1TOXNNRWcKZ2prQ0F3RUFBYU9DQW9Vd2dnS0JNQjhHQTFVZEl3UVlNQmFBRk1qWmVHaWkyUmxvMVQxeTNsOEtQdHkxaG9hbQpNQjBHQTFVZERnUVdCQlJuNHlYWVBLVTU0c0JVdVNzRXlqSlpPMm1kbERBT0JnTlZIUThCQWY4RUJBTUNCYUF3CkRBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1NRWUQKVlIwZ0JFSXdRREEwQmdzckJnRUVBYkl4QVFJQ1RqQWxNQ01HQ0NzR0FRVUZCd0lCRmhkb2RIUndjem92TDNObApZM1JwWjI4dVkyOXRMME5RVXpBSUJnWm5nUXdCQWdFd2dZZ0dDQ3NHQVFVRkJ3RUJCSHd3ZWpCTEJnZ3JCZ0VGCkJRY3dBb1kvYUhSMGNEb3ZMM3BsY205emMyd3VZM0owTG5ObFkzUnBaMjh1WTI5dEwxcGxjbTlUVTB4U1UwRkUKYjIxaGFXNVRaV04xY21WVGFYUmxRMEV1WTNKME1Dc0dDQ3NHQVFVRkJ6QUJoaDlvZEhSd09pOHZlbVZ5YjNOegpiQzV2WTNOd0xuTmxZM1JwWjI4dVkyOXRNSUlCQkFZS0t3WUJCQUhXZVFJRUFnU0I5UVNCOGdEd0FIWUFmVDd5CitJLy9pRlZvSk1MQXlwNVNpWGtyeFE1NENYOHVhcGRvbVg0aThOY0FBQUYzVDRDeUJ3QUFCQU1BUnpCRkFpQkoKOC9oY0pGOFU4RHJ0a1ZNamVvWDlBSzUxMDFqNm4xWXc3empaa3dvK1BBSWhBTkdWZkFWdFFPUzlmTmNuWWRIZApRSDlEdVdUU2ZXR09NeThFS3M4bGdTdkhBSFlBbENDOEhvN1ZqV3lJY3grQ2l5SXNEZEhhVFY1c1Q1UTlZZHRPCkwxaE5vc0lBQUFGM1Q0Q3pVQUFBQkFNQVJ6QkZBaUVBN1VhL3Q5RnBiVUVMaDM2YWtJdERhYUJYZzF2TmgxU2MKaGV4Q3pTcUNNK2tDSUVYSmVpbFB1bkJseVdhQWRJSUU3QWtUWHlzUGlyQXFUWWIrUkVvYTZnd1lNQ1FHQTFVZApFUVFkTUJ1Q0dXSXVkQzV6ZEdGbmFXNW5Mblp2YkhSaFoyVmhjSEF1YVc4d0RRWUpLb1pJaHZjTkFRRU1CUUFECmdnSUJBQWdaditweTZuMmkzSW92ck5wcjFvaW9pcVE2Z0NqQ2ErWi8rQzc1UFZxTFpvTkNnL291azlhTS9DSE4KUjhQMVJFd0F3MVVIKy8vV0MwUm53VkNOUUFFMU5KMG5aOS9qTytCb05XSXduK1NBYU1EU0xtUkpjemtPU2p0TApvL2FjOUlLb0IwWktoYnhyK3FIaSs0QWhVMmV2UHh2T3orY3NXZ041cU9vSnRkcjVRWmU4Z3UrMytrQkxUNEJCClYvUEVxTGE3SGhjUHBwcDZkNmdHQ29nTFdIbUd6RHdtSnltK2JLenJzL252N1pPc3FJbko0a0pCZ0o3NlhFQWYKYVV4bkhZMUJoR1JjTk9KNWFhM2xYRXM5Ty81NmlOeXFNYjkrVEJFMlhUTWRXNEVQRE9qYVNERDN0MUx0KzBMSQovZUZxWkVVdmhnQVVPblBWRUpJZHJrRnZ5SHEydmNpaXRxUENZWmZTWTdXNy9OZ1dCWXZnaFNEeGJEYklUZjRECnRsWWh3aEg4VG9wS0pJN1k2UTBpRVdYaktuVnhtUTRmeHp2anZVQno5ODJmY1lOSnRzY0YxbktxUHIzTzc1ekYKVThsNEVSM1Rpd3ByTVNNdHB3MGdGNnkvYXhsdnZENkVPclRNd2VmcXRuUDJYTW4zaktWUXJuZzl4aFZXcHk0TworVW5mWXJBWDgxcjVSK2lQMW9mQ2xkS0xmaDRwUCsvalVua1ZaYXRRNlp5THJvQnpibFdNTnZHNXhkeTFwTkQ0ClJxOVhsUk8xQWtlYThld1JGcHRRMzBrQVhhLzlDcXM0emxyV0hiR2ptNXpKWk9sU0lmNWJFSXo2OEtNUTVsY2QKTlFVSzFNVU9yZ0UwWVRZcmxwdzhtNnJlZFZEblFwSXBRZjFaWkJWQmFxUzM0NEE4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlHMVRDQ0JMMmdBd0lCQWdJUWJGV3IyOUFIa3NlZEJ3ellFWjdXdnpBTkJna3Foa2lHOXcwQkFRd0ZBRENCCmlERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2s1bGR5QktaWEp6WlhreEZEQVNCZ05WQkFjVEMwcGwKY25ObGVTQkRhWFI1TVI0d0hBWURWUVFLRXhWVWFHVWdWVk5GVWxSU1ZWTlVJRTVsZEhkdmNtc3hMakFzQmdOVgpCQU1USlZWVFJWSlVjblZ6ZENCU1UwRWdRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhrd0hoY05NakF3Ck1UTXdNREF3TURBd1doY05NekF3TVRJNU1qTTFPVFU1V2pCTE1Rc3dDUVlEVlFRR0V3SkJWREVRTUE0R0ExVUUKQ2hNSFdtVnliMU5UVERFcU1DZ0dBMVVFQXhNaFdtVnliMU5UVENCU1UwRWdSRzl0WVdsdUlGTmxZM1Z5WlNCVAphWFJsSUVOQk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBaG1semZxTzFNZGdqCjRXM2RwQlBUVkJYMUF1dmNBeUcxZmwwZFVudy9NZXVlQ1d6UldUaGVaMzVMVm85MWtMSTNERFZhWktXK1RCQXMKSkJqRWJZbU13Y1dTVFdZQ2c1MzM0U0YwK2N0REFzRnhzWCtyVERoOWtTckcvNG1wNk9TaHViTGFFSVVKaVpvNAp0ODczVHVTZDBXajVEV3QzRHRwQUc4VDM1bC92K3hyTjh1YjhQU1NvWDVWa2d3K2pXZjRLUXROdlVGTERxOG1GCldoVW5QTDZqSEFBRFhwdnM0bFROWXdPdHg5eVF0YnB4d1N0N1FKWTErSUNybVJKQjZCdUtSdC9qZkRKRjlKc2MKUlFWbEhJeFFkS0FKbDdvYVZuWGdEa3F0azJxZGRkM2tDRFhkNzRndjgxM0c5MXo3Q2pzR3lKOTNvSklsTlMzVQpnRmJENlY1NEpNZ1ozclNtb3RZYno5OG9aeFg3TUtidENtMWFKL3EraFR2MllLMXlNeHJuZmNpZUttT1lCYkZECmhuVzVPNlJNQTcwM2RCSzkyajZYUk4yRXR0TGtRdXVqWmd5K2pYUkt0YVdNSWxrTmtXSm1PaUhtRXJRbmdIdnQKaU5rSWNqSnVtcTFkZEZYNGlhVEk0MGE2emd2SUJ0eEZlRHMyUmZjYUg3M2VyN2N0TlVVcWdRVDVyRmdKaE1tRgp4NzZyUWdCNU9aVWtvZGI1azJleDdQK0d1NEo4NmJTMTUwOTRVdVljVjA5aFZla25tVGg1RXg5Q0JLaXBMUzJXCjJ3S0Jha2YrYVZZbk5DVTZTMG5BU3F0MnhyWnBHQzF2N3Y2RGh1ZXB5eUp0bjNxU1YyUG9CaVU1U3FsK2FBUnAKd1VpYlFNR200NGdqeU5EcURsVnArU2hMUWxVSDl4OENBd0VBQWFPQ0FYVXdnZ0Z4TUI4R0ExVWRJd1FZTUJhQQpGRk41djFxcUswclBWSURoMkp2QW5mS3lBMmJMTUIwR0ExVWREZ1FXQkJUSTJYaG9vdGtaYU5VOWN0NWZDajdjCnRZYUdwakFPQmdOVkhROEJBZjhFQkFNQ0FZWXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUJBREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdJZ1lEVlIwZ0JCc3dHVEFOQmdzckJnRUVBYkl4QVFJQwpUakFJQmdabmdRd0JBZ0V3VUFZRFZSMGZCRWt3UnpCRm9FT2dRWVkvYUhSMGNEb3ZMMk55YkM1MWMyVnlkSEoxCmMzUXVZMjl0TDFWVFJWSlVjblZ6ZEZKVFFVTmxjblJwWm1sallYUnBiMjVCZFhSb2IzSnBkSGt1WTNKc01IWUcKQ0NzR0FRVUZCd0VCQkdvd2FEQS9CZ2dyQmdFRkJRY3dBb1l6YUhSMGNEb3ZMMk55ZEM1MWMyVnlkSEoxYzNRdQpZMjl0TDFWVFJWSlVjblZ6ZEZKVFFVRmtaRlJ5ZFhOMFEwRXVZM0owTUNVR0NDc0dBUVVGQnpBQmhobG9kSFJ3Ck9pOHZiMk56Y0M1MWMyVnlkSEoxYzNRdVkyOXRNQTBHQ1NxR1NJYjNEUUVCREFVQUE0SUNBUUFWRHdvSXpRRFYKZXJjVDBlWXFaakJOSjhWTld3VkZsUU90WkVScW41aVduRVZhTFpaZHp4bGJ2ejJGeDBFeFVOdVVFZ1lrSVZNNApZb2NLa0NRN2hPNW5vaWNvcS9EckVZSDVJdU5jdVcxSThKSlo5REx1QjFmWXZJSGxaMkpHNDZpTmJWS0EzeWdBCkV6ODZSdkRRbHQyQzQ5NHFxUFZJdFJqcno5WWxKRUdUMERydHR5QXBxMFlMRkR6ZitaMXBrTWhoN2MrN2ZYZUoKcW1JaGZKcGR1S2M4SEVRa1lRUVNoZW40MjZTM0gwSnJJQWJLY0JDaXlZRnVPaGZ5dnV3VkNGRGZGdnJqQURqZAo0algxdVFYZDE2MUl5RlJibTg5czJPajVvVTF3RFl6NXN4K2hvQ3VoNmxTcysvdVB1V29tSXEzeTFHREZOYWZXCitMc0hCVTE2bFFvNVEyeWgyNWxhUXNLUmd5UG1NcEhKOThlZG02eTJzSFVhYkFTbVJIeHZHaXV3d0UyNWFEVTAKMlNBZWVweUltSjJDekI4MFlHN1d4bHluSHFOaHBFN3hmQzdQelFsTGdtZkVIZFUrdEhGZVFhelJRbnJGa1cyVwprcVJHSXE3Y0tSbnl5cHZqUE1ramVpVjlsUmRBTTlmU0p2c0Izc3ZVdXUxY29JRzF4eEkxeWVnb0dNNHI1UVA0ClJHSVZ2WWFpSTc2QzBkam9TYlEvZGtJVVVYUXVCOEFMNWp5SDM0ZzNCWmFhWHl2cG1uVjRpbHBwTVhWQW5BWUcKT041MVdoSjZXMHhOZE5Kd3pZQVNaWUgrdG1DV0krTjYwR3YyTk5NR0h3TVo3ZTliWGd6VUNaSDVGYUJGREdSNQpTOVZXcUhCNzNRK095SVZ2SWJLWWNTYzJ3L2FTdUZLR1NBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                },
                "example": {
                  "message": "node_id is invalid"
                }
              }
            }
          }
        },
        "summary": "/node/cert",
        "description": "Get the node's TLS Certificate"
      }
    },
    "/node/name": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_name",
                  "network"
                ],
                "type": "object",
                "properties": {
                  "node_name": {
                    "type": "string",
                    "description": "Name to check"
                  },
                  "network": {
                    "type": "string",
                    "description": "Bitcoin network to use. Can be either 'mainnet' or 'testnet'."
                  }
                },
                "example": {
                  "network": "mainnet",
                  "node_name": "myvoltagenode"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taken": {
                      "type": "boolean",
                      "description": "Indicates if the name is already taken"
                    },
                    "valid": {
                      "type": "boolean",
                      "description": "Indicates if the name is a valid name"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "Name value sent for checking"
                    }
                  },
                  "example": {
                    "taken": false,
                    "valid": true,
                    "node_name": "myvoltagenode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                },
                "example": {
                  "message": "bad request body"
                }
              }
            }
          }
        },
        "summary": "/node/name",
        "description": "Check if a node name is already taken"
      }
    },
    "/node/seed": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "f8f2256d-d443-4d73-8f9c-cae0831e55cfN"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User defined node name given at creation"
                    },
                    "seed": {
                      "type": "string",
                      "description": "Encrypted seed value"
                    }
                  },
                  "example": {
                    "node_id": "f8f2256d-d443-4d73-8f9c-cae0831e55cfN",
                    "node_name": "myvoltagenode",
                    "seed": "kljdlkjfklahelkjhlkjh=="
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "node_id is invalid"
                  }
                }
              }
            }
          }
        },
        "summary": "/node/seed",
        "description": "Get the encrypted seed data"
      }
    },
    "/node/upload_seed": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_id",
                  "seed"
                ],
                "type": "object",
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID of the node"
                  },
                  "seed": {
                    "type": "string",
                    "description": "Encrypted string of the seed. DO NOT UPLOAD UNENCRYPTED DATA."
                  }
                },
                "example": {
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "seed": "jdflkh3j4hjkhljkhf234dfasd="
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    }
                  },
                  "example": {
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "the node already has a seed saved."
                  }
                }
              }
            }
          }
        },
        "summary": "/node/upload_seed",
        "description": "Upload the node's encrypted seed"
      }
    },
    "/node/update": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "3ac8b9f5-6e7a-4727-abe4-5ae61587e8e5N"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "lnd_version": {
                      "type": "string",
                      "description": "New version of LND"
                    },
                    "volt_version": {
                      "type": "string",
                      "description": "New version of Voltage"
                    }
                  },
                  "example": {
                    "node_id": "3ac8b9f5-6e7a-4727-abe4-5ae61587e8e5N",
                    "lnd_version": "0.13.1-beta",
                    "volt_version": "v0.3.0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                },
                "example": {
                  "message": "node is already up to date"
                }
              }
            }
          }
        },
        "summary": "/node/update",
        "description": "Update the Node version"
      }
    },
    "/node/connect": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_id",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID of the node"
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the macaroon you to use when connecting"
                  }
                },
                "example": {
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "name": "admin"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "type": "string",
                      "description": "API Endpoint for the node"
                    },
                    "macaroon": {
                      "type": "string",
                      "description": "Encrypted value of the macaroon. Left blank if the macaroon doesn't exist."
                    },
                    "tls_cert": {
                      "type": "string",
                      "description": "Base64 encoded TLS Certificate"
                    }
                  },
                  "example": {
                    "endpoint": "myvoltagenode.m.voltageapp.io",
                    "macaroon": "kdfkad7f8a892k3hkjab3kj4hwjb234...",
                    "tls_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0..."
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "missing required field."
                  }
                }
              }
            }
          }
        },
        "summary": "/node/connect",
        "description": "Get Node's Connection Information"
      }
    },
    "/node/logs": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User defined node name given at creation"
                    },
                    "last_modified": {
                      "type": "string",
                      "description": "Timestamp of the most recent log line"
                    },
                    "log_lines": {
                      "type": "array",
                      "description": "List of the last 100 log lines",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "node_name": "myvoltagenode",
                    "last_modified": "2021-02-10T21:41:19Z",
                    "log_lines": [
                      "2021-02-10 21:41:18.935 [INF] CRTR: Processed channels=0 updates=3 nodes=0 in last 1m0.000018738s",
                      "2021-02-10 21:41:13.867 [INF] DISC: Broadcasting 3 new announcements in 1 sub batches",
                      "2021-02-10 21:40:18.935 [INF] CRTR: Processed channels=0 updates=1 nodes=0 in last 59.999863569s",
                      "2021-02-10 21:39:43.867 [INF] DISC: Broadcasting 1 new announcements in 1 sub batches",
                      "2021-02-10 21:39:18.935 [INF] CRTR: Processed channels=0 updates=1 nodes=0 in last 1m38.000990198s",
                      "2021-02-10 21:38:18.945 [INF] UTXN: Attempting to graduate height=1935306: num_kids=0, num_babies=0",
                      "2021-02-10 21:38:18.945 [INF] NTFN: New block: height=1935306, sha=000000000000002535ebc0f175241bfe3e1cc2f9b8b2cc61a6e9e9ceea9046e1"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                },
                "example": {
                  "message": "node_id is invalid"
                }
              }
            }
          }
        },
        "summary": "/node/logs",
        "description": "Get the last 100 log messages for a node."
      }
    },
    "/node/settings": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_id",
                  "settings"
                ],
                "type": "object",
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID of the node"
                  },
                  "settings": {
                    "$ref": "#/components/schemas/Node Settings",
                    "required": [
                      "autopilot",
                      "alias",
                      "color",
                      "grpc",
                      "rest",
                      "tor",
                      "keysend",
                      "whitelist"
                    ]
                  }
                },
                "example": {
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "settings": {
                    "autopilot": false,
                    "grpc": true,
                    "rest": true,
                    "keysend": true,
                    "alias": "myvoltagenode",
                    "color": "#EF820D",
                    "whitelist": [
                      "1.1.1.1",
                      "2.2.2.2"
                    ],
                    "wumbo": false,
                    "webhook": "",
                    "webhook_secret": "19cef4784ff04ff5bc8053d5847254e0",
                    "minchansize": "",
                    "maxchansize": "",
                    "autocompaction": true,
                    "defaultfeerate": "",
                    "numgraphsyncpeers": "3",
                    "maxpendingchannels": "2",
                    "allowcircularroute": false,
                    "gccanceledinvoicesonthefly": false,
                    "gccanceledinvoicesonstartup": false,
                    "wtclient": false,
                    "amp": true,
                    "rpcmiddleware": false,
                    "optionscidalias": false,
                    "zeroconf": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User defined node name given at creation"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the node. Can be one of 'starting', 'running', 'stopping', 'stopped', 'provisioning', 'waiting_init', 'waiting_unlock'."
                    },
                    "expires": {
                      "type": "string",
                      "description": "Date that the node expires. If a paid node with active subscription this is 'never'."
                    },
                    "created": {
                      "type": "string",
                      "description": "Date that the node was created."
                    },
                    "api_endpoint": {
                      "type": "string",
                      "description": "API Endpoint for the node."
                    },
                    "network": {
                      "type": "string",
                      "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
                    },
                    "purchased_type": {
                      "type": "string",
                      "description": "Purchase type of the node. Can be either 'trial', 'paid', or 'ondemand'."
                    },
                    "purchase_status": {
                      "type": "string",
                      "description": "Purchase status of the node."
                    },
                    "lnd_version": {
                      "type": "string",
                      "description": "Version of LND the node is running"
                    },
                    "volt_version": {
                      "type": "string",
                      "description": "Version of Voltage the node is running"
                    },
                    "macaroons": {
                      "type": "array",
                      "description": "List of backed up macaroons",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the macaroon"
                          },
                          "created": {
                            "type": "string",
                            "description": "Date it was uploaded"
                          }
                        }
                      }
                    },
                    "settings": {
                      "$ref": "#/components/schemas/Node Settings"
                    }
                  },
                  "example": {
                    "node_name": "myvoltagenode",
                    "status": "restarting",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "expires": "never",
                    "created": "2021-01-29T18:55:12Z",
                    "api_endpoint": "myvoltagenode.m.voltageapp.io",
                    "network": "mainnet",
                    "purchased_type": "paid",
                    "purchase_status": "active",
                    "lnd_version": "0.13.1-beta",
                    "volt_version": "v0.3.0",
                    "macaroons": [
                      {
                        "name": "admin",
                        "created": "2021-01-29T18:56:00Z"
                      }
                    ],
                    "settings": {
                      "autopilot": false,
                      "grpc": true,
                      "rest": true,
                      "keysend": true,
                      "alias": "myvoltagenode",
                      "color": "#EF820D",
                      "whitelist": [
                        "1.1.1.1",
                        "2.2.2.2"
                      ],
                      "wumbo": false,
                      "webhook": "",
                      "webhook_secret": "19cef4784ff04ff5bc8053d5847254e0",
                      "sphinx": true,
                      "minchansize": "",
                      "maxchansize": "",
                      "autocompaction": true,
                      "defaultfeerate": "5",
                      "numgraphsyncpeers": "3",
                      "maxpendingchannels": "2",
                      "allowcircularroute": false,
                      "gccanceledinvoicesonthefly": false,
                      "gccanceledinvoicesonstartup": false,
                      "wtclient": false,
                      "amp": true,
                      "rpcmiddleware": false,
                      "optionscidalias": false,
                      "zeroconf": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "maxchansize is invalid"
                  }
                },
                "example": {
                  "message": "maxchansize is invalid"
                }
              }
            }
          }
        },
        "summary": "/node/settings",
        "description": "Update the settings of the node"
      }
    },
    "/node/whitelist": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_id",
                  "whitelist"
                ],
                "type": "object",
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID of the node"
                  },
                  "whitelist": {
                    "type": "array",
                    "description": "List of IP Addresses that are allowed to talk to your node"
                  }
                },
                "example": {
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "whitelist": [
                    "1.1.1.1",
                    "2.2.2.2"
                  ]
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node"
                    },
                    "whitelist": {
                      "type": "array",
                      "description": "List of IP Addresses that are allowed to talk to your node"
                    }
                  },
                  "example": {
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "whitelist": [
                      "1.1.1.1",
                      "2.2.2.2"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "node_id is invalid"
                  }
                }
              }
            }
          }
        },
        "summary": "/node/whitelist",
        "description": "Update your nodes IP Whitelist without restarting the node"
      }
    },
    "/node/dashboards": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node Request"
              },
              "example": {
                "node_id": "9e94432b-963b-41da-96a6-8731a80c811eN"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboards": {
                      "type": "array",
                      "description": "List of dashboards for the node",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dashboard_id": {
                            "type": "string",
                            "description": "Unique ID for the Dashboard"
                          },
                          "dashboard_name": {
                            "type": "string",
                            "description": "System generated name for the dashboard"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the dashboard"
                          },
                          "node_id": {
                            "type": "string",
                            "description": "Unique ID of the node connected to this dashboard"
                          },
                          "node_name": {
                            "type": "string",
                            "description": "User given name for the node connected to this dashboard"
                          },
                          "created": {
                            "type": "string",
                            "description": "Timestamp the dashboard was created"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of dashboard"
                          },
                          "endpoint": {
                            "type": "string",
                            "description": "Endpoint used to access the dashboard"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version of the dashboard"
                          },
                          "update_available": {
                            "type": "boolean",
                            "description": "Whether the dashboard has a pending update or not"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "dashboards": [
                      {
                        "dashboard_id": "96f6e522-0e9f-4611-93fb-dc7fa40cd25cD",
                        "dashboard_name": "96f6e5220e",
                        "status": "running",
                        "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                        "node_name": "myvoltagenode",
                        "created": "2021-02-10T19:39:01Z",
                        "type": "thunderhub",
                        "endpoint": "96f6e5220e.d.voltageapp.io",
                        "version": "0.13.5",
                        "update_available": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/node/dashboards",
        "description": "Get a list of running dashboards for the node"
      }
    },
    "/export": {
      "get": {
        "tags": [
          "Export"
        ],
        "responses": {
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exports": {
                      "type": "array",
                      "description": "List of exports for the user",
                      "items": {
                        "type": "object",
                        "properties": {
                          "export_id": {
                            "type": "string",
                            "description": "Unique ID of the export"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of export"
                          },
                          "name": {
                            "type": "string",
                            "description": "System generated name for the export"
                          },
                          "creation_date": {
                            "type": "string",
                            "description": "Timestamp the export was created"
                          },
                          "expire_date": {
                            "type": "string",
                            "description": "Timestamp the export can no longer be accessed"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the export"
                          },
                          "node_id": {
                            "type": "string",
                            "description": "Unique node ID the export was for"
                          },
                          "url": {
                            "type": "string",
                            "description": "URL to download the export from"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "exports": [
                      {
                        "export_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeE",
                        "type": "full",
                        "name": "export-name-123",
                        "creation_date": "2021-01-29T18:55:12Z",
                        "expire_date": "2021-01-29T19:55:12Z",
                        "status": "creating",
                        "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                        "url": "https://export.com/abc123"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                },
                "example": {
                  "message": "bad request body"
                }
              }
            }
          }
        },
        "summary": "/export",
        "description": "Get all exports"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_id",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID for the node you want to create an export for"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of export. Possible types are 'full', 'log', 'channelbackup', 'tls'"
                  }
                },
                "example": {
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "type": "full"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Export"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "export_id": {
                      "type": "string",
                      "description": "Unique ID of the export"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of export"
                    },
                    "name": {
                      "type": "string",
                      "description": "System generated name for the export"
                    },
                    "creation_date": {
                      "type": "string",
                      "description": "Timestamp the export was created"
                    },
                    "expire_date": {
                      "type": "string",
                      "description": "Timestamp the export can no longer be accessed"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the export"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique node ID the export was for"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to download the export from"
                    }
                  },
                  "example": {
                    "export_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeE",
                    "type": "full",
                    "name": "export-name-123",
                    "creation_date": "2021-01-29T18:55:12Z",
                    "expire_date": "2021-01-29T19:55:12Z",
                    "status": "creating",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "url": "https://export.com/abc123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/export",
        "description": "Create an Export for the node"
      }
    },
    "/dashboards": {
      "get": {
        "tags": [
          "Dashboards"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboards": {
                      "type": "array",
                      "description": "List of dashboards for the user",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dashboard_id": {
                            "type": "string",
                            "description": "Unique ID for the Dashboard"
                          },
                          "dashboard_name": {
                            "type": "string",
                            "description": "System generated name for the dashboard"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the dashboard"
                          },
                          "node_id": {
                            "type": "string",
                            "description": "Unique ID of the node connected to this dashboard"
                          },
                          "node_name": {
                            "type": "string",
                            "description": "User given name for the node connected to this dashboard"
                          },
                          "created": {
                            "type": "string",
                            "description": "Timestamp the dashboard was created"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of dashboard"
                          },
                          "endpoint": {
                            "type": "string",
                            "description": "Endpoint used to access the dashboard"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version of the dashboard"
                          },
                          "update_available": {
                            "type": "boolean",
                            "description": "Whether the dashboard has a pending update or not"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "dashboards": [
                      {
                        "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeE",
                        "node_name": "myvoltagenode",
                        "dashboard_name": "7b12b51086",
                        "created": "2021-01-29T18:55:12Z",
                        "status": "running",
                        "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                        "type": "thunderhub",
                        "endpoint": "7b12b51086.d.voltageapp.io",
                        "version": "0.13.5",
                        "update_available": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/dashboard",
        "description": "Get all dashboards"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "dashboard_id"
                ],
                "type": "object",
                "properties": {
                  "dashboard_id": {
                    "type": "string",
                    "description": "Unique ID of the dashboard"
                  }
                },
                "example": {
                  "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Dashboards"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard_id": {
                      "type": "string",
                      "description": "Unique ID for the Dashboard"
                    },
                    "dashboard_name": {
                      "type": "string",
                      "description": "System generated name for the dashboard"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the dashboard"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this dashboard"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this dashboard"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of dashboard"
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "Endpoint used to access the dashboard"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the dashboard"
                    },
                    "update_available": {
                      "type": "boolean",
                      "description": "Whether the dashboard has a pending update or not"
                    }
                  },
                  "example": {
                    "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD",
                    "node_name": "myvoltagenode",
                    "dashboard_name": "7b12b51086",
                    "created": "2021-01-29T18:55:12Z",
                    "status": "running",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "type": "thunderhub",
                    "endpoint": "7b12b51086.d.voltageapp.io",
                    "version": "0.13.5",
                    "update_available": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/dashboard",
        "description": "Get a Dashboard"
      }
    },
    "/dashboards/create": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "node_id",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID for the node to create a dashboard for"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of dashboard. Possible choices are 'thunderhub' or 'lnbits'"
                  }
                },
                "example": {
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "type": "thunderhub"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Dashboards"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard_id": {
                      "type": "string",
                      "description": "Unique ID for the Dashboard"
                    },
                    "dashboard_name": {
                      "type": "string",
                      "description": "System generated name for the dashboard"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the dashboard"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this dashboard"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this dashboard"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of dashboard"
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "Endpoint used to access the dashboard"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the dashboard"
                    },
                    "update_available": {
                      "type": "boolean",
                      "description": "Whether the dashboard has a pending update or not"
                    }
                  },
                  "example": {
                    "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD",
                    "node_name": "myvoltagenode",
                    "dashboard_name": "7b12b51086",
                    "created": "2021-01-29T18:55:12Z",
                    "status": "running",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "type": "thunderhub",
                    "endpoint": "7b12b51086.d.voltageapp.io",
                    "version": "0.13.5",
                    "update_available": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "node already has a dashboard running"
                  }
                }
              }
            }
          }
        },
        "summary": "/dashboard/create",
        "description": "Create a Dashboard for the node"
      }
    },
    "/dashboards/start": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "dashboard_id"
                ],
                "type": "object",
                "properties": {
                  "dashboard_id": {
                    "type": "string",
                    "description": "Unique ID of the dashboard"
                  }
                },
                "example": {
                  "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Dashboards"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard_id": {
                      "type": "string",
                      "description": "Unique ID for the Dashboard"
                    },
                    "dashboard_name": {
                      "type": "string",
                      "description": "System generated name for the dashboard"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the dashboard"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this dashboard"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this dashboard"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of dashboard"
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "Endpoint used to access the dashboard"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the dashboard"
                    },
                    "update_available": {
                      "type": "boolean",
                      "description": "Whether the dashboard has a pending update or not"
                    }
                  },
                  "example": {
                    "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD",
                    "node_name": "myvoltagenode",
                    "dashboard_name": "7b12b51086",
                    "created": "2021-01-29T18:55:12Z",
                    "status": "running",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "type": "thunderhub",
                    "endpoint": "7b12b51086.d.voltageapp.io",
                    "version": "0.13.5",
                    "update_available": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "node already has a dashboard running"
                  }
                }
              }
            }
          }
        },
        "summary": "/dashboard/start",
        "description": "Start an existing Dashboard"
      }
    },
    "/dashboards/stop": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "dashboard_id"
                ],
                "type": "object",
                "properties": {
                  "dashboard_id": {
                    "type": "string",
                    "description": "Unique ID of the dashboard"
                  }
                },
                "example": {
                  "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Dashboards"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard_id": {
                      "type": "string",
                      "description": "Unique ID for the Dashboard"
                    },
                    "dashboard_name": {
                      "type": "string",
                      "description": "System generated name for the dashboard"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the dashboard"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this dashboard"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this dashboard"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of dashboard"
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "Endpoint used to access the dashboard"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the dashboard"
                    },
                    "update_available": {
                      "type": "boolean",
                      "description": "Whether the dashboard has a pending update or not"
                    }
                  },
                  "example": {
                    "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD",
                    "node_name": "myvoltagenode",
                    "dashboard_name": "7b12b51086",
                    "created": "2021-01-29T18:55:12Z",
                    "status": "stopped",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "type": "thunderhub",
                    "endpoint": "7b12b51086.d.voltageapp.io",
                    "version": "0.13.5",
                    "update_available": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "node already has a dashboard running"
                  }
                }
              }
            }
          }
        },
        "summary": "/dashboard/stop",
        "description": "Stop an existing Dashboard"
      }
    },
    "/dashboards/updatee": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "dashboard_id"
                ],
                "type": "object",
                "properties": {
                  "dashboard_id": {
                    "type": "string",
                    "description": "Unique ID of the dashboard"
                  }
                },
                "example": {
                  "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Dashboards"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard_id": {
                      "type": "string",
                      "description": "Unique ID for the Dashboard"
                    },
                    "dashboard_name": {
                      "type": "string",
                      "description": "System generated name for the dashboard"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the dashboard"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this dashboard"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this dashboard"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of dashboard"
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "Endpoint used to access the dashboard"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the dashboard"
                    },
                    "update_available": {
                      "type": "boolean",
                      "description": "Whether the dashboard has a pending update or not"
                    }
                  },
                  "example": {
                    "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD",
                    "node_name": "myvoltagenode",
                    "dashboard_name": "7b12b51086",
                    "created": "2021-01-29T18:55:12Z",
                    "status": "stopped",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "type": "thunderhub",
                    "endpoint": "7b12b51086.d.voltageapp.io",
                    "version": "0.13.5",
                    "update_available": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "dashboard is already up to date"
                  }
                }
              }
            }
          }
        },
        "summary": "/dashboard/update",
        "description": "Update an existing Dashboard"
      }
    },
    "/dashboards/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "dashboard_id"
                ],
                "type": "object",
                "properties": {
                  "dashboard_id": {
                    "type": "string",
                    "description": "Unique ID of the dashboard"
                  }
                },
                "example": {
                  "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Dashboards"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard_id": {
                      "type": "string",
                      "description": "Unique ID for the Dashboard"
                    },
                    "dashboard_name": {
                      "type": "string",
                      "description": "System generated name for the dashboard"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the dashboard"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this dashboard"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this dashboard"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of dashboard"
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "Endpoint used to access the dashboard"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the dashboard"
                    },
                    "update_available": {
                      "type": "boolean",
                      "description": "Whether the dashboard has a pending update or not"
                    }
                  },
                  "example": {
                    "dashboard_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeD",
                    "node_name": "myvoltagenode",
                    "dashboard_name": "7b12b51086",
                    "created": "2021-01-29T18:55:12Z",
                    "status": "deleted",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "type": "thunderhub",
                    "endpoint": "7b12b51086.d.voltageapp.io"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "dashboard already deleted"
                  }
                }
              }
            }
          }
        },
        "summary": "/dashboard/delete",
        "description": "Delete a Dashboard"
      }
    },
    "/btcpayserver": {
      "get": {
        "tags": [
          "BTCPay Server"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "btcpayservers": {
                      "type": "array",
                      "description": "List of btcpayservers for the user",
                      "items": {
                        "type": "object",
                        "properties": {
                          "btcpayserver_id": {
                            "type": "string",
                            "description": "Unique ID for the BTCPay Store"
                          },
                          "created": {
                            "description": "Timestamp the dashboard was created"
                          },
                          "expires": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the BTCPay Store"
                          },
                          "instance": {
                            "type": "string",
                            "description": "Which BTCPay instance it belongs to"
                          },
                          "node_id": {
                            "type": "string",
                            "description": "Unique ID of the node connected to this BTCPay Store"
                          },
                          "node_name": {
                            "type": "string",
                            "description": "User given name for the node connected to this BTCPay Store"
                          },
                          "store_id": {
                            "type": "string",
                            "description": "BTCPay Store ID created by BTCPay Server"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "btcpayservers": [
                      {
                        "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB",
                        "created": "2021-01-29T18:55:12Z",
                        "expires": "2021-01-29T18:55:12Z",
                        "status": "creating",
                        "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                        "node_name": "myvoltagenode",
                        "store_id": "Guaa5QKVJBH5gi3nu29hWUFBt6m2FiQCvPC7fE6nLJzT",
                        "instance": "btcpay0"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/btcpayserver",
        "description": "Get info about all btcpayserver accounts"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "btcpayserver_id"
                ],
                "type": "object",
                "properties": {
                  "btcpayserver_id": {
                    "type": "string",
                    "description": "Unique ID for the BTCPay Store"
                  }
                },
                "example": {
                  "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "BTCPay Server"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "btcpayserver_id": {
                      "type": "string",
                      "description": "Unique ID for the BTCPay Store"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "expires": {
                      "type": "string",
                      "description": "Date that the store expires. If a paid store with active subscription this is 'never'."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the BTCPay Store"
                    },
                    "instance": {
                      "type": "string",
                      "description": "Which BTCPay instance it belongs to"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this BTCPay Store"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this BTCPay Store"
                    },
                    "purchase_status": {
                      "type": "string",
                      "description": "Payment status for the store"
                    },
                    "store_id": {
                      "type": "string",
                      "description": "BTCPay Store ID created by BTCPay Server"
                    },
                    "password": {
                      "type": "string",
                      "description": "System generated default password for the store"
                    }
                  },
                  "example": {
                    "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB",
                    "created": "2021-01-29T18:55:12Z",
                    "expires": "2021-01-29T18:55:12Z",
                    "status": "creating",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "node_name": "myvoltagenode",
                    "store_id": "Guaa5QKVJBH5gi3nu29hWUFBt6m2FiQCvPC7fE6nLJzT",
                    "purchase_status": "active",
                    "instance": "btcpay0",
                    "password": "ajkdkjwh4lkjwjrl23=="
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/btcpayserver",
        "description": "Get info about one btcpayserver accounts"
      }
    },
    "/btcpayserver/create": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "store_name"
                ],
                "properties": {
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID of the node connected to this store"
                  },
                  "node_macaroon": {
                    "type": "string",
                    "description": "Hex value of a macaroon for BTCPay Server specifically"
                  },
                  "store_name": {
                    "type": "string",
                    "description": "A user generated name for the store"
                  },
                  "derivation_scheme": {
                    "type": "string",
                    "description": "Derivation Scheme used for the onchain funds if created outside the store"
                  },
                  "account_key_path": {
                    "type": "string",
                    "description": "Account Key Path used for the onchain funds if created outside the store"
                  },
                  "bitcoin_seed_backup": {
                    "type": "string",
                    "description": "Encrypted backup of the onchain funds seed. DO NO SEND UNENCRYPTED DATA."
                  }
                },
                "example": {
                  "node_id": "b2d8d7dd-aba3-4d6c-adcb-c755e039964bN",
                  "node_macaroon": "01230123KJHGV3GF2JGHFHJG23HK1",
                  "store_name": "mycoolstore",
                  "derivation_scheme": "xpub...",
                  "account_key_path": "abc123...",
                  "bitcoin_seed_backup": "234hkjhlakjdhflkjaherjjera/le=="
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "BTCPay Server"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "btcpayserver_id": {
                      "type": "string",
                      "description": "Unique ID for the BTCPay Store"
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp the dashboard was created"
                    },
                    "expires": {
                      "type": "string",
                      "description": "Date that the store expires. If a paid store with active subscription this is 'never'."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the BTCPay Store"
                    },
                    "instance": {
                      "type": "string",
                      "description": "Which BTCPay instance it belongs to"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this BTCPay Store"
                    },
                    "node_name": {
                      "type": "string",
                      "description": "User given name for the node connected to this BTCPay Store"
                    },
                    "purchase_status": {
                      "type": "string",
                      "description": "Payment status for the store"
                    },
                    "store_id": {
                      "type": "string",
                      "description": "BTCPay Store ID created by BTCPay Server"
                    },
                    "password": {
                      "type": "string",
                      "description": "System generated default password for the store"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the BTCPay Store"
                    }
                  },
                  "example": {
                    "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB",
                    "created": "2021-01-29T18:55:12Z",
                    "expires": "never",
                    "status": "creating",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                    "node_name": "myvoltagenode",
                    "subscription_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeS",
                    "purchase_status": "active",
                    "store_id": "Guaa5QKVJBH5gi3nu29hWUFBt6m2FiQCvPC7fE6nLJzT",
                    "instance": "btcpay0",
                    "url": "btcpay0.voltageapp.io",
                    "password": "ajkdkjwh4lkjwjrl23=="
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/btcpayserver/create",
        "description": "Create a new BTCPay Server account"
      }
    },
    "/btcpayserver/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "btcpayserver_id"
                ],
                "type": "object",
                "properties": {
                  "btcpayserver_id": {
                    "type": "string",
                    "description": "Unique ID of the BTCPay Store"
                  }
                },
                "example": {
                  "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "BTCPay Server"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "btcpayserver_id": {
                      "type": "string",
                      "description": "Unique ID of the BTCPay Store"
                    },
                    "status": {
                      "type": "string",
                      "description": "Store's status"
                    }
                  },
                  "example": {
                    "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB",
                    "status": "creating"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/btcpayserver/delete",
        "description": "Delete a new BTCPay Server account"
      }
    },
    "/btcpayserver/node_update": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "btcpayserver_id",
                  "node_id",
                  "node_macaroon"
                ],
                "type": "object",
                "properties": {
                  "btcpayserver_id": {
                    "type": "string",
                    "description": "Unique ID for the BTCPay Store"
                  },
                  "node_id": {
                    "type": "string",
                    "description": "Unique ID of the node connected to this BTCPay Store"
                  },
                  "node_macaroon": {
                    "type": "string",
                    "description": "Hex value of a macaroon for BTCPay Server specifically"
                  }
                },
                "example": {
                  "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB",
                  "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
                  "node_macaroon": "90890d7f908sd7f087a"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "BTCPay Server"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "btcpayserver_id": {
                      "type": "string",
                      "description": "Unique ID for the BTCPay Store"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the BTCPay Store"
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Unique ID of the node connected to this BTCPay Store"
                    }
                  },
                  "example": {
                    "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB",
                    "status": "running",
                    "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/btcpayserver/update_node",
        "description": "Updates what node is attached to a btcpay store"
      }
    },
    "/btcpayserver/seed": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "btcpayserver_id"
                ],
                "type": "object",
                "properties": {
                  "btcpayserver_id": {
                    "type": "string",
                    "description": "Unique ID for the BTCPay Store"
                  }
                },
                "example": {
                  "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB"
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "BTCPay Server"
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "btcpayserver_id": {
                      "type": "string",
                      "description": "Unique ID for the BTCPay Store"
                    },
                    "seed": {
                      "type": "string",
                      "description": "Encrypted string of the onchain seed"
                    }
                  },
                  "example": {
                    "btcpayserver_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeB",
                    "seed": "kjhsdkjfblwjbjkhlkj4h234lj"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        },
        "summary": "/btcpayserver/seed",
        "description": "Get the encrypted Seed backup"
      }
    },
    "/flow/quote": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/quote",
        "description": "Get a quote for an order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "capacity"
                ],
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number",
                    "description": "Amount of requested satoshis of inbound liquidity."
                  },
                  "self_chan_balance": {
                    "type": "number",
                    "description": "Amount of requested satoshis of outbound liquidity."
                  },
                  "lease_duration_blocks": {
                    "type": "number",
                    "description": "How many blocks you are purchasing the channel for. Supported durations are 2016, 4032, 12096, and 52416."
                  },
                  "node_tier": {
                    "type": "string",
                    "description": "The Pool node tier you would like to purchase the channel from. Can be 'any' or 'best'."
                  },
                  "bps": {
                    "type": "number",
                    "description": "Overwrite the default fee BPS and set your own."
                  }
                },
                "example": {
                  "capacity": 1000000,
                  "self_chan_balance": 100000,
                  "lease_duration_blocks": 2016,
                  "node_tier": "any",
                  "bps": 18
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voltage_fee": {
                      "type": "number",
                      "description": "The fee that Voltage charges for channel opening."
                    },
                    "pool_fee": {
                      "type": "number",
                      "description": "The fee that the Pool service charges you for cancelling."
                    },
                    "self_chan_balance_fee": {
                      "type": "number",
                      "description": "The fee that you must pay to get funds on your side of the channel."
                    },
                    "total_fee": {
                      "type": "number",
                      "description": "Sum of all the fees."
                    },
                    "amount_due": {
                      "type": "number",
                      "description": "Amount you would have to pay for the order."
                    },
                    "capacity": {
                      "type": "number",
                      "description": "Amount of requested satoshis of inbound liquidity."
                    },
                    "self_chan_balance": {
                      "type": "number",
                      "description": "Amount of requested satoshis of outbound liquidity."
                    },
                    "lease_duration_blocks": {
                      "type": "number",
                      "description": "How many blocks you are purchasing the channel. Supported durations are 2016, 4032, 12096, and 52416."
                    },
                    "rate_bps": {
                      "type": "number",
                      "description": "The BPS used on the order."
                    },
                    "rate_fixed": {
                      "type": "number",
                      "description": "The equivalent fixed rate in Parts Per Billion for the order."
                    },
                    "auto_bps_rate": {
                      "type": "boolean",
                      "description": "Whether Voltage calculated the fee rate for your order, or not."
                    },
                    "credit_used": {
                      "type": "number",
                      "description": "Amount of Flow credit that would've been used for this order."
                    },
                    "corporate_account": {
                      "type": "boolean",
                      "description": "Whether the account is a corporate account or not."
                    }
                  },
                  "example": {
                    "voltage_fee": 34,
                    "pool_fee": 471,
                    "self_chan_balance_fee": 0,
                    "total_fee": 505,
                    "amount_due": 505,
                    "capacity": 1000000,
                    "self_chan_balance": 0,
                    "lease_duration_blocks": 2016,
                    "node_tier": "any",
                    "rate_bps": 18,
                    "rate_fixed": 892,
                    "auto_bps_rate": true,
                    "credit_used": 0,
                    "corporate_account": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/create": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/create",
        "description": "Create an order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "capacity"
                ],
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number",
                    "description": "Amount of requested satoshis of inbound liquidity."
                  },
                  "self_chan_balance": {
                    "type": "number",
                    "description": "Amount of requested satoshis of outbound liquidity."
                  },
                  "lease_duration_blocks": {
                    "type": "number",
                    "description": "How many blocks you are purchasing the channel. Supported durations are 2016, 4032, 12096, and 52416."
                  },
                  "node_tier": {
                    "type": "string",
                    "description": "The Pool node tier you would like to purchase the channel from. Can be 'any' or 'best'."
                  },
                  "bps": {
                    "type": "number",
                    "description": "Overwrite the default fee BPS and set your own."
                  }
                },
                "example": {
                  "capacity": 1000000,
                  "self_chan_balance": 100000,
                  "lease_duration_blocks": 2016,
                  "node_tier": "any",
                  "bps": 18
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "order_id": {
                      "type": "string",
                      "description": "Flow Order ID"
                    },
                    "creation_date": {
                      "type": "string",
                      "description": "Date the order was created"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the flow order"
                    },
                    "paid": {
                      "type": "boolean",
                      "description": "Whether the order has been paid for or not"
                    },
                    "order_nonce": {
                      "type": "string",
                      "description": "Pool order identifier"
                    },
                    "node_tier": {
                      "type": "string",
                      "description": "Tier of nodes this order can be filled by"
                    },
                    "rate_fixed": {
                      "type": "number",
                      "description": "Fixed fee rate for the order"
                    },
                    "rate_bps": {
                      "type": "number",
                      "description": "Basis Point fee rate for the order"
                    },
                    "auto_bps_rate": {
                      "type": "boolean",
                      "description": "Whether Voltage calculated the fee rate for your order, or not."
                    },
                    "sidecar_ticket": {
                      "type": "string",
                      "description": "Generated Sidecar Ticket for the order"
                    },
                    "onchain_address": {
                      "type": "string",
                      "description": "Onchain address to pay for the order"
                    },
                    "lightning_invoice": {
                      "type": "string",
                      "description": "Lightning invoice for the order"
                    },
                    "voltage_fee": {
                      "type": "number",
                      "description": "The fee that Voltage charges for channel opening."
                    },
                    "pool_fee": {
                      "type": "number",
                      "description": "The fee that the Pool service charges you for cancelling."
                    },
                    "self_chan_balance_fee": {
                      "type": "number",
                      "description": "The fee that you must pay to get funds on your side of the channel."
                    },
                    "total_fee": {
                      "type": "number",
                      "description": "Sum of all the fees."
                    },
                    "amount_due": {
                      "type": "number",
                      "description": "Amount you would have to pay for the order."
                    },
                    "credit_used": {
                      "type": "number",
                      "description": "The part of the total_fee that came from the user's credits."
                    },
                    "capacity": {
                      "type": "number",
                      "description": "Amount of requested satoshis of inbound liquidity."
                    },
                    "self_chan_balance": {
                      "type": "number",
                      "description": "Amount of requested satoshis of outbound liquidity."
                    },
                    "lease_duration_blocks": {
                      "type": "number",
                      "description": "How many blocks you are purchasing the channel. Supported durations are 2016, 4032, 12096, and 52416."
                    }
                  },
                  "example": {
                    "order_id": "5c18b4bb-bc21-42e3-93ad-b0c266307427FO",
                    "creation_date": "2021-10-07T04:25:45Z",
                    "status": "waiting_payment",
                    "paid": false,
                    "order_nonce": "fc7075b11642024c7d0524782a7ed559dcbbcac0523f8413992d5b2ac49f5139",
                    "node_tier": "any",
                    "rate_fixed": 1877,
                    "rate_bps": 37,
                    "auto_bps_rate": true,
                    "sidecar_ticket": "sidecar15oicriqZiptvno6uhYPePbgBAAsFS7zVYUvq6DdrEPgG3h12R5P3LykRPAVje46dTY1Tb4NMr6N4kjgvYTNKbyBFbWecss2TC1mR4iBFw74d6zPBnfVd5wrcLyD2gzNopCfRGyqBzmcdbco45NBGp5tNu32Adsy93CnVtPhpgLf9LT8C7442nAUBLoPmFdx4fegJ589ehQ3HfUMbLy7HRFYAJ3xf5Mr9snZTMe556aVXqrZwo5Y2n9UZXLTPnXeB",
                    "onchain_address": "",
                    "lightning_invoice": "",
                    "voltage_fee": 34,
                    "pool_fee": 471,
                    "self_chan_balance_fee": 0,
                    "total_fee": 505,
                    "amount_due": 505,
                    "credit_used": 0,
                    "capacity": 1000000,
                    "self_chan_balance": 0,
                    "lease_duration_blocks": 2016
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/orders": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/orders",
        "description": "List Orders",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "description": "List of orders",
                      "items": {
                        "type": "object",
                        "properties": {
                          "order_id": {
                            "type": "string",
                            "description": "Flow Order ID"
                          },
                          "creation_date": {
                            "type": "string",
                            "description": "Date the order was created"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the flow order"
                          },
                          "paid": {
                            "type": "boolean",
                            "description": "Whether the order has been paid for or not"
                          },
                          "order_nonce": {
                            "type": "string",
                            "description": "Pool order identifier"
                          },
                          "node_tier": {
                            "type": "string",
                            "description": "Tier of nodes this order can be filled by"
                          },
                          "amount_due": {
                            "type": "number",
                            "description": "Amount you would have to pay for the order."
                          },
                          "rate_fixed": {
                            "type": "number",
                            "description": "Fixed fee rate for the order"
                          },
                          "rate_bps": {
                            "type": "number",
                            "description": "Fixed fee rate for the order"
                          },
                          "auto_bps_rate": {
                            "type": "boolean",
                            "description": "Whether Voltage calculated the fee rate for your order, or not."
                          },
                          "capacity": {
                            "type": "number",
                            "description": "Amount of requested satoshis of inbound liquidity."
                          },
                          "self_chan_balance": {
                            "type": "number",
                            "description": "Amount of requested satoshis of outbound liquidity."
                          },
                          "lease_duration_blocks": {
                            "type": "number",
                            "description": "How many blocks you are purchasing the channel. Supported durations are 2016, 4032, 12096, and 52416."
                          },
                          "credit_used": {
                            "type": "number",
                            "description": "The part of the total_fee that came from the user's credits."
                          },
                          "credit_refund": {
                            "type": "number",
                            "description": "The amount that has been added to the user's credit. (Only shown if order was cancelled)"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "orders": [
                      {
                        "order_id": "5c18b4bb-bc21-42e3-93ad-b0c266307427FO",
                        "creation_date": "2021-10-07T04:25:45Z",
                        "status": "waiting_payment",
                        "paid": false,
                        "order_nonce": "fc7075b11642024c7d0524782a7ed559dcbbcac0523f8413992d5b2ac49f5139",
                        "node_tier": "any",
                        "amount_due": 505,
                        "rate_fixed": 1877,
                        "rate_bps": 37,
                        "auto_bps_rate": false,
                        "capacity": 1000000,
                        "self_chan_balance": 0,
                        "lease_duration_blocks": 2016,
                        "credit_used": 0,
                        "credit_refund": 0
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/status": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/status",
        "description": "Get the status for order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "order_id"
                ],
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "Flow Order ID"
                  }
                },
                "example": {
                  "order_id": "5c18b4bb-bc21-42e3-93ad-b0c266307427FO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "order_id": {
                      "type": "string",
                      "description": "Flow Order ID"
                    },
                    "creation_date": {
                      "type": "string",
                      "description": "Date the order was created"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the flow order"
                    },
                    "paid": {
                      "type": "boolean",
                      "description": "Whether the order has been paid for or not"
                    },
                    "order_nonce": {
                      "type": "string",
                      "description": "Pool order identifier"
                    },
                    "node_tier": {
                      "type": "string",
                      "description": "Tier of nodes this order can be filled by"
                    },
                    "voltage_fee": {
                      "type": "string",
                      "description": "The fee that Voltage charges for channel opening."
                    },
                    "pool_fee": {
                      "type": "string",
                      "description": "The fee that the Pool service charges you for cancelling."
                    },
                    "self_chan_balance_fee": {
                      "type": "string",
                      "description": "The fee that you must pay to get funds on your side of the channel."
                    },
                    "total_fee": {
                      "type": "string",
                      "description": "Sum of all the fees."
                    },
                    "amount_due": {
                      "type": "string",
                      "description": "Amount you would have to pay for the order."
                    },
                    "sidecar_ticket": {
                      "type": "string",
                      "description": "Generated Sidecar Ticket for the order"
                    },
                    "onchain_address": {
                      "type": "string",
                      "description": "Onchain address to pay for the order"
                    },
                    "lightning_invoice": {
                      "type": "string",
                      "description": "Lightning invoice for the order"
                    },
                    "capacity": {
                      "type": "string",
                      "description": "Amount of requested satoshis of inbound liquidity."
                    },
                    "self_chan_balance": {
                      "type": "string",
                      "description": "Amount of requested satoshis of outbound liquidity."
                    },
                    "lease_duration_blocks": {
                      "type": "string",
                      "description": "How many blocks you are purchasing the channel. Supported durations are 2016, 4032, 12096, and 52416."
                    },
                    "rate_fixed": {
                      "type": "number",
                      "description": "Fixed fee rate for the order"
                    },
                    "rate_bps": {
                      "type": "string",
                      "description": "The BPS used on the order."
                    },
                    "auto_bps_rate": {
                      "type": "boolean",
                      "description": "Whether Voltage calculated the fee rate for your order, or not."
                    },
                    "credit_used": {
                      "type": "string",
                      "description": "The part of the total_fee that came from the user's credits."
                    },
                    "credit_refund": {
                      "type": "string",
                      "description": "The amount that has been added to the user's credit."
                    }
                  },
                  "example": {
                    "order_id": "5c18b4bb-bc21-42e3-93ad-b0c266307427FO",
                    "creation_date": "2021-10-07T04:25:45Z",
                    "status": "waiting_payment",
                    "paid": false,
                    "order_nonce": "fc7075b11642024c7d0524782a7ed559dcbbcac0523f8413992d5b2ac49f5139",
                    "node_tier": "any",
                    "voltage_fee": 34,
                    "pool_fee": 471,
                    "self_chan_balance_fee": 0,
                    "total_fee": 505,
                    "amount_due": 505,
                    "sidecar_ticket": "sidecar15oicriqZiptvno6uhYPePbgBAAsFS7zVYUvq6DdrEPgG3h12R5P3LykRPAVje46dTY1Tb4NMr6N4kjgvYTNKbyBFbWecss2TC1mR4iBFw74d6zPBnfVd5wrcLyD2gzNopCfRGyqBzmcdbco45NBGp5tNu32Adsy93CnVtPhpgLf9LT8C7442nAUBLoPmFdx4fegJ589ehQ3HfUMbLy7HRFYAJ3xf5Mr9snZTMe556aVXqrZwo5Y2n9UZXLTPnXeB",
                    "onchain_address": "",
                    "lightning_invoice": "",
                    "capacity": 1000000,
                    "self_chan_balance": 0,
                    "lease_duration_blocks": 2016,
                    "rate_fixed": 1877,
                    "rate_bps": 18,
                    "auto_bps_rate": true,
                    "credit_used": 0,
                    "credit_refund": 505
                  }
                }
              }
            }
          },
          "400": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/cancel": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/cancel",
        "description": "Cancel an in-progress order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "order_id"
                ],
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "Flow Order ID"
                  }
                },
                "example": {
                  "order_id": "5c18b4bb-bc21-42e3-93ad-b0c266307427FO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "order_id": {
                      "type": "string",
                      "description": "Flow Order ID"
                    },
                    "creation_date": {
                      "type": "string",
                      "description": "Date the order was created"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the flow order"
                    },
                    "paid": {
                      "type": "boolean",
                      "description": "Whether the order has been paid for or not"
                    },
                    "order_nonce": {
                      "type": "string",
                      "description": "Pool order identifier"
                    },
                    "node_tier": {
                      "type": "string",
                      "description": "Tier of nodes this order can be filled by"
                    },
                    "voltage_fee": {
                      "type": "number",
                      "description": "The fee that Voltage charges for channel opening."
                    },
                    "pool_fee": {
                      "type": "number",
                      "description": "The fee that the Pool service charges you for cancelling."
                    },
                    "self_chan_balance_fee": {
                      "type": "number",
                      "description": "The fee that you must pay to get funds on your side of the channel."
                    },
                    "total_fee": {
                      "type": "number",
                      "description": "Sum of all the fees."
                    },
                    "amount_due": {
                      "type": "number",
                      "description": "Amount you would have to pay for the order."
                    },
                    "sidecar_ticket": {
                      "type": "string",
                      "description": "Generated Sidecar Ticket for the order"
                    },
                    "onchain_address": {
                      "type": "string",
                      "description": "Onchain address to pay for the order"
                    },
                    "lightning_invoice": {
                      "type": "string",
                      "description": "Lightning invoice for the order"
                    },
                    "capacity": {
                      "type": "number",
                      "description": "Amount of requested satoshis of inbound liquidity."
                    },
                    "self_chan_balance": {
                      "type": "number",
                      "description": "Amount of requested satoshis of outbound liquidity."
                    },
                    "lease_duration_blocks": {
                      "type": "number",
                      "description": "How many blocks you are purchasing the channel. Supported durations are 2016, 4032, 12096, and 52416."
                    },
                    "rate_fixed": {
                      "type": "number",
                      "description": "Fixed fee rate for the order"
                    },
                    "rate_bps": {
                      "type": "number",
                      "description": "The BPS used on the order."
                    },
                    "auto_bps_rate": {
                      "type": "boolean",
                      "description": "Whether Voltage calculated the fee rate for your order, or not."
                    },
                    "credit_used": {
                      "type": "number",
                      "description": "The part of the total_fee that came from the user's credits."
                    },
                    "credit_refund": {
                      "type": "number",
                      "description": "The amount that has been added to the user's credit."
                    }
                  },
                  "example": {
                    "order_id": "5c18b4bb-bc21-42e3-93ad-b0c266307427FO",
                    "creation_date": "2021-10-07T04:25:45Z",
                    "status": "waiting_payment",
                    "paid": false,
                    "order_nonce": "fc7075b11642024c7d0524782a7ed559dcbbcac0523f8413992d5b2ac49f5139",
                    "node_tier": "any",
                    "voltage_fee": 34,
                    "pool_fee": 471,
                    "self_chan_balance_fee": 0,
                    "total_fee": 505,
                    "amount_due": 0,
                    "sidecar_ticket": "sidecar15oicriqZiptvno6uhYPePbgBAAsFS7zVYUvq6DdrEPgG3h12R5P3LykRPAVje46dTY1Tb4NMr6N4kjgvYTNKbyBFbWecss2TC1mR4iBFw74d6zPBnfVd5wrcLyD2gzNopCfRGyqBzmcdbco45NBGp5tNu32Adsy93CnVtPhpgLf9LT8C7442nAUBLoPmFdx4fegJ589ehQ3HfUMbLy7HRFYAJ3xf5Mr9snZTMe556aVXqrZwo5Y2n9UZXLTPnXeB",
                    "onchain_address": "",
                    "lightning_invoice": "",
                    "capacity": 1000000,
                    "self_chan_balance": 0,
                    "lease_duration_blocks": 2016,
                    "rate_fixed": 1877,
                    "rate_bps": 18,
                    "auto_bps_rate": true,
                    "credit_used": 505,
                    "credit_refund": 505
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "bad request body"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/balance": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/balance",
        "description": "Get the balance of your account",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number",
                      "description": "Corporate Account balance for monthly invoicing (Only returned for corporate accounts)"
                    },
                    "credit": {
                      "type": "number",
                      "description": "Available credit from redeeming coupons, and cancelled orders"
                    }
                  },
                  "example": {
                    "balance": 2312312,
                    "credit": 1500
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/coupons": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/coupons",
        "description": "Get coupons associated with you account",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coupons": {
                      "type": "array",
                      "description": "List of coupons associated with account",
                      "items": {
                        "type": "object",
                        "properties": {
                          "coupon_id": {
                            "type": "string",
                            "description": "ID of the Flow Coupon"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Amount of the coupon"
                          },
                          "claimed": {
                            "type": "boolean",
                            "description": "Has coupon been used?"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "coupons": [
                      {
                        "coupon_id": "b0c26630-bc21-42e3-93ad-b0c266307427FC",
                        "amount": 1254,
                        "claimed": false
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/redeem": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/redeem",
        "description": "Redeem your coupons into credit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "coupon"
                ],
                "type": "object",
                "properties": {
                  "coupon": {
                    "type": "string",
                    "description": "Flow coupon code"
                  }
                },
                "example": {
                  "coupon": "14356941-2cf5-1143-acde-ffee1234abcdFC"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coupon_id": {
                      "type": "string",
                      "description": "The coupon id which was redeemed"
                    },
                    "credit": {
                      "type": "number",
                      "description": "The total credit the user has after redeeming"
                    },
                    "coupon_amount": {
                      "type": "number",
                      "description": "The value of the coupon"
                    }
                  },
                  "example": {
                    "coupon": "0c8c5bc8-4f29-452d-acb6-70928571769dFC",
                    "credit": 5000,
                    "coupon_amount": 1000
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/market": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/market",
        "description": "Get Pool's market information",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "last_batch": {
                      "type": "object",
                      "properties": {
                        "timestamp": {
                          "type": "number",
                          "description": "timestamp of the previously filled batch"
                        },
                        "txid": {
                          "type": "string",
                          "description": "The bitcoin txid of the last filled batch"
                        }
                      }
                    },
                    "next_batch": {
                      "type": "object",
                      "properties": {
                        "timestamp": {
                          "type": "number",
                          "description": "closing timestamp of next potential batch"
                        }
                      }
                    },
                    "market_info": {
                      "type": "object",
                      "properties": {
                        "2016": {
                          "type": "object",
                          "description": "Information about the 2016 block market",
                          "properties": {
                            "num_asks": {
                              "type": "array",
                              "description": "Number of asks per tier",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string",
                                    "description": "Node Tier"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "Number of orders for the tier"
                                  }
                                }
                              }
                            },
                            "num_bids": {
                              "type": "array",
                              "description": "Number of asks per tier",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string",
                                    "description": "Node Tier"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "Number of orders for the tier"
                                  }
                                }
                              }
                            },
                            "ask_open_interest_units": {
                              "type": "array",
                              "description": "Number of ask units (100,000 sats) of open interest per tier",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string",
                                    "description": "Node Tier"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "Number of orders for the tier"
                                  }
                                }
                              }
                            },
                            "bid_open_interest_units": {
                              "type": "array",
                              "description": "Number of bid units (100,000 sats) of open interest per tier",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string",
                                    "description": "Node Tier"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "Number of orders for the tier"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "last_batch": {
                      "timestamp": 1638226052,
                      "txid": "5ccedc494eb4b945b9ac6dac7fc93dcc181e20ad68adbd330076452261913dbb"
                    },
                    "next_batch": {
                      "timestamp": 1638228322
                    },
                    "market_info": {
                      "2016": {
                        "num_asks": [
                          {
                            "tier": "TIER_0",
                            "value": 76
                          },
                          {
                            "tier": "TIER_1",
                            "value": 67
                          }
                        ],
                        "num_bids": [
                          {
                            "tier": "TIER_0",
                            "value": 6
                          },
                          {
                            "tier": "TIER_1",
                            "value": 31
                          }
                        ],
                        "ask_open_interest_units": [
                          {
                            "tier": "TIER_0",
                            "value": 1031
                          },
                          {
                            "tier": "TIER_1",
                            "value": 7899
                          }
                        ],
                        "bid_open_interest_units": [
                          {
                            "tier": "TIER_0",
                            "value": 32
                          },
                          {
                            "tier": "TIER_1",
                            "value": 4878
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flow/ratings": {
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "/flow/ratings",
        "description": "Get the Pool rating of a node",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pubkey"
                ],
                "type": "object",
                "properties": {
                  "pubkey": {
                    "type": "string",
                    "description": "Node's Public Key"
                  }
                },
                "example": {
                  "pubkey": "031f2669adab71548fad4432277a0d90233e3bc07ac29cfb0b3e01bd3fb26cb9fa"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node_pubkey": {
                      "type": "string",
                      "description": "Public key of the requsted node"
                    },
                    "node_tier": {
                      "type": "string",
                      "description": "Pool Tier of the ndoe"
                    }
                  },
                  "example": {
                    "node_pubkey": "031f2669adab71548fad4432277a0d90233e3bc07ac29cfb0b3e01bd3fb26cb9fa",
                    "node_tier": "TIER_0"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "400": {
        "required": [],
        "enum": [],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "node_id is not valid"
        }
      },
      "401": {
        "description": "",
        "required": [],
        "enum": [],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Unauthorized"
        }
      },
      "User Document": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Unique Voltage user ID"
          },
          "email": {
            "type": "string",
            "description": "Email address for the user"
          },
          "email_verified": {
            "type": "boolean",
            "description": "Indicator if the user has verified their email"
          },
          "mfa_enabled": {
            "type": "boolean",
            "description": "Indicator if the user has MFA enabled"
          },
          "trial_available": {
            "type": "boolean",
            "description": "Indicator if the user has a trial available for a node"
          },
          "btcpayserver_trial": {
            "type": "boolean",
            "description": "Indicator if the user has a trial available for a BTCPay Server"
          },
          "available_standard_nodes": {
            "type": "number",
            "description": "Number of available Standard nodes the user can provision"
          },
          "available_lite_nodes": {
            "type": "number",
            "description": "Number of available Lite nodes the user can provision"
          },
          "purchased_standard_nodes": {
            "type": "number",
            "description": "Number of Standard nodes that user has purchased"
          },
          "purchased_lite_nodes": {
            "type": "number",
            "description": "Number of Lite nodes that user has purchased"
          },
          "available_btcpayservers": {
            "type": "number",
            "description": "Number of BTCPay Servers the user can create"
          }
        },
        "example": {
          "user_id": "9e94432b-963b-41da-96a6-8731a80c811eU",
          "email": "email@site.com",
          "email_verified": "true",
          "mfa_enabled": false,
          "trial_available": false,
          "btcpayserver_trial": true,
          "available_nodes": 1,
          "available_lite_nodes": 0,
          "purchased_nodes": 1,
          "purchased_lite_nodes": 3,
          "available_btcpayservers": 1
        }
      },
      "Node Document": {
        "type": "object",
        "properties": {
          "node_name": {
            "type": "string",
            "description": "User defined node name given at creation"
          },
          "status": {
            "type": "string",
            "description": "Status of the node. Can be one of 'starting', 'running', 'stopping', 'stopped', 'provisioning', 'waiting_init', 'waiting_unlock'."
          },
          "node_id": {
            "type": "string",
            "description": "Unique ID for the node."
          },
          "expires": {
            "type": "string",
            "description": "Date that the node expires. If a paid node with active subscription this is 'never'."
          },
          "created": {
            "type": "string",
            "description": "Date that the node was created."
          },
          "type": {
            "type": "string",
            "description": "Type of node, either 'standard' or 'lite'"
          },
          "purchased_type": {
            "type": "string",
            "description": "Purchase type of the node. Can be either 'trial', 'paid', or 'ondemand'."
          },
          "purchase_status": {
            "type": "string",
            "description": "Purchase status of the node."
          },
          "lnd_version": {
            "type": "string",
            "description": "Version of LND the node is running"
          },
          "volt_version": {
            "type": "string",
            "description": "Version of Voltage the node is running"
          },
          "update_available": {
            "type": "boolean",
            "description": "Indicates if there is an update available"
          },
          "api_endpoint": {
            "type": "string",
            "description": "API Endpoint for the node."
          },
          "network": {
            "type": "string",
            "description": "Network the node is running on. Can be either 'testnet' or 'mainnet'."
          },
          "command_history": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Action that was performed"
                },
                "time": {
                  "type": "string",
                  "description": "Timestamp the event happened"
                }
              }
            }
          },
          "macaroons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the backed up macaroon"
                },
                "created": {
                  "type": "string",
                  "description": "Timestamp the macaroon was backed up at"
                }
              }
            }
          },
          "settings": {
            "$ref": "#/components/schemas/Node Settings"
          }
        },
        "example": {
          "node_name": "myvoltagenode",
          "status": "running",
          "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
          "expires": "never",
          "created": "2021-01-29T18:55:12Z",
          "type": "standard",
          "purchased_type": "paid",
          "purchase_status": "active",
          "lnd_version": "0.15.2-beta",
          "volt_version": "v0.3.12",
          "update_available": false,
          "api_endpoint": "myvoltagenode.m.voltageapp.io",
          "network": "mainnet",
          "command_history": [
            {
              "action": "stop",
              "time": "2021-08-29T18:55:12Z"
            },
            {
              "action": "start",
              "time": "2021-08-29T18:59:12Z"
            }
          ],
          "settings": {
            "autopilot": false,
            "grpc": true,
            "rest": true,
            "keysend": true,
            "alias": "myvoltagenode",
            "color": "#EF820D",
            "whitelist": [
              "1.1.1.1",
              "2.2.2.2"
            ],
            "wumbo": false,
            "webhook": "",
            "webhook_secret": "19cef4784ff04ff5bc8053d5847254e0",
            "sphinx": true,
            "minchansize": "",
            "maxchansize": "",
            "autocompaction": true,
            "defaultfeerate": "",
            "numgraphsyncpeers": "3",
            "maxpendingchannels": "2",
            "allowcircularroute": false,
            "gccanceledinvoicesonthefly": false,
            "gccanceledinvoicesonstartup": false,
            "amp": true,
            "wtclient": false,
            "torskipproxyforclearnettargets": false,
            "rpcmiddleware": false,
            "optionscidalias": false,
            "zeroconf": false
          }
        }
      },
      "Node Settings": {
        "type": "object",
        "description": "Settings for the Lightning Node",
        "properties": {
          "autopilot": {
            "type": "boolean",
            "description": "When enabled, LND will turn on its autopilot feature"
          },
          "grpc": {
            "type": "boolean",
            "description": "When enabled, LND will active the gRPC API"
          },
          "rest": {
            "type": "boolean",
            "description": "When enabled, LND will active the REST API"
          },
          "keysend": {
            "type": "boolean",
            "description": "When enabled, LND will enable the Keysend feature"
          },
          "whitelist": {
            "type": "array",
            "description": "A list of IPs that are allowed to talk to your node",
            "items": {
              "type": "string"
            }
          },
          "alias": {
            "type": "string",
            "description": "Your node's Alias on the peer to peer network"
          },
          "color": {
            "type": "string",
            "description": "Your node's Color on the peer to peer network"
          },
          "wumbo": {
            "type": "boolean",
            "description": "When enabled, LND will accept Wumbo channels"
          },
          "webhook": {
            "type": "string",
            "description": "Your webhook endpoint if you wish to receive webhook events"
          },
          "webhook_secret": {
            "type": "string",
            "description": "Webhook secret used to validate the webhook is coming from us"
          },
          "minchansize": {
            "type": "string",
            "description": "The minimum channel size your node will accept"
          },
          "maxchansize": {
            "type": "string",
            "description": "The maximum channel size your node will accept"
          },
          "autocompaction": {
            "type": "boolean",
            "description": "When enabled, LND will automatically compact the databases on startup"
          },
          "defaultfeerate": {
            "type": "string",
            "description": "Your default fee rate for your channels"
          },
          "basefee": {
            "type": "string",
            "description": "Your base fee rate for your channels"
          },
          "amp": {
            "type": "boolean",
            "description": "Enables AMP"
          },
          "wtclient": {
            "type": "boolean",
            "description": "Enables the watchtower client"
          },
          "maxpendingchannels": {
            "type": "string",
            "description": "Maximum number of pending channels allowed for a single peer"
          },
          "allowcircularroute": {
            "type": "boolean",
            "description": "If enabled, allows a payment to exit and enter the same channel"
          },
          "numgraphsyncpeers": {
            "type": "string",
            "description": "Number of peers used for syncing the graph"
          },
          "gccanceledinvoicesonstartup": {
            "type": "boolean",
            "description": "If enabled, deletes cancelled invoices only when LND starts up"
          },
          "gccanceledinvoicesonthefly": {
            "type": "boolean",
            "description": "If enabled, deletes cancelled invoices while LND is running"
          },
          "torskipproxyforclearnettargets": {
            "type": "boolean",
            "description": "Optimization for clearnet peers. See LND Docs."
          },
          "rpcmiddleware": {
            "type": "boolean",
            "description": "Enables the rpcmiddleware, which can interecept certain rpc calls. See LND Docs."
          },
          "optionscidalias": {
            "type": "boolean",
            "description": "If enabled, and zeroconf is also enabled, it is possible to create zeroconf channels. See lnd docs."
          },
          "zeroconf": {
            "type": "boolean",
            "description": "If enabled, and optionscidalias is also enabled, it is possible to create zeroconf channels. See lnd docs."
          }
        },
        "example": {
          "autopilot": false,
          "grpc": true,
          "rest": true,
          "keysend": true,
          "alias": "myvoltagenode",
          "color": "#EF820D",
          "whitelist": [
            "1.1.1.1",
            "2.2.2.2"
          ],
          "wumbo": false,
          "webhook": "",
          "webhook_secret": "19cef4784ff04ff5bc8053d5847254e0",
          "sphinx": true,
          "minchansize": "",
          "maxchansize": "",
          "autocompaction": true,
          "defaultfeerate": "",
          "numgraphsyncpeers": "3",
          "maxpendingchannels": "2",
          "allowcircularroute": false,
          "gccanceledinvoicesonthefly": false,
          "gccanceledinvoicesonstartup": false,
          "amp": true,
          "wtclient": false,
          "torskipproxyforclearnettargets": false,
          "rpcmiddleware": false,
          "optionscidalias": false,
          "zeroconf": false
        }
      },
      "User Request": {
        "required": [
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          }
        },
        "example": {
          "user_id": "9e94432b-963b-41da-96a6-8731a80c811eU"
        }
      },
      "Node Request": {
        "required": [
          "node_id"
        ],
        "type": "object",
        "properties": {
          "node_id": {
            "type": "string",
            "description": "Voltage Node ID you're requesting"
          }
        },
        "example": {
          "node_id": "9e94432b-963b-41da-96a6-8731a80c811eN"
        }
      }
    },
    "securitySchemes": {
      "API Token": {
        "type": "apiKey",
        "in": "header",
        "name": "X-VOLTAGE-AUTH",
        "description": "An API Key can be created on your Voltage Dashboard. See the documentation for more details.\nExample: \n> X-VOLTAGE-AUTH: v55c018bad2354035a34098f425d203c7"
      }
    },
    "responses": {},
    "examples": {
      "Node Settings Example": {
        "autopilot": false,
        "grpc": true,
        "rest": true,
        "keysend": true,
        "alias": "myvoltagenode",
        "color": "#EF820D",
        "whitelist": [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "wumbo": false,
        "webhook": "",
        "webhook_secret": "19cef4784ff04ff5bc8053d5847254e0",
        "sphinx": true,
        "minchansize": "",
        "maxchansize": "",
        "autocompaction": true,
        "defaultfeerate": "",
        "numgraphsyncpeers": "3",
        "maxpendingchannels": "2",
        "allowcircularroute": false,
        "gccanceledinvoicesonthefly": false,
        "gccanceledinvoicesonstartup": false,
        "amp": true,
        "wtclient": false,
        "torskipproxyforclearnettargets": false,
        "rpcmiddleware": false,
        "optionscidalias": false,
        "zeroconf": false
      },
      "Node Document Example": {
        "node_name": "myvoltagenode",
        "status": "running",
        "node_id": "7b12b510-8633-4c49-af2b-9cb5b73d6feeN",
        "expires": "never",
        "created": "2021-01-29T18:55:12Z",
        "type": "standard",
        "purchased_type": "paid",
        "purchase_status": "active",
        "lnd_version": "0.15.2-beta",
        "volt_version": "v0.3.12",
        "update_available": false,
        "api_endpoint": "myvoltagenode.m.voltageapp.io",
        "network": "mainnet",
        "command_history": [
          {
            "action": "stop",
            "time": "2021-08-29T18:55:12Z"
          },
          {
            "action": "start",
            "time": "2021-08-29T18:59:12Z"
          }
        ],
        "settings": {
          "autopilot": false,
          "grpc": true,
          "rest": true,
          "keysend": true,
          "alias": "myvoltagenode",
          "color": "#EF820D",
          "whitelist": [
            "1.1.1.1",
            "2.2.2.2"
          ],
          "wumbo": false,
          "webhook": "",
          "webhook_secret": "19cef4784ff04ff5bc8053d5847254e0",
          "sphinx": true,
          "minchansize": "",
          "maxchansize": "",
          "autocompaction": true,
          "defaultfeerate": "",
          "numgraphsyncpeers": "3",
          "maxpendingchannels": "2",
          "allowcircularroute": false,
          "gccanceledinvoicesonthefly": false,
          "gccanceledinvoicesonstartup": false,
          "amp": true,
          "wtclient": false,
          "torskipproxyforclearnettargets": false,
          "rpcmiddleware": false,
          "optionscidalias": false,
          "zeroconf": false
        }
      }
    },
    "parameters": {}
  },
  "security": [
    {
      "API Token": []
    }
  ],
  "externalDocs": {
    "description": "View the Voltage Documentation",
    "url": "https://docs.voltage.cloud"
  },
  "tags": []
}
